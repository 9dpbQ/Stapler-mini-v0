///ANSI ,JIS,ISOそれぞれのキーコードタイプで出力できるように、
///それぞれのタイプごとに出力される文字：そのFunctionTypeとキーコード
///のキーコードリスト。
///これを参照してJSONExporterで文字列を生成する。
import Foundation

enum KeyCodeFunctionType: String {//jsonでいうキーコード本体と対になる値。文字列は.rawValueで呼び出せる。
    case appleVendorKeyboard = "apple_vendor_keyboard_key_code"
    case appleVendorTopCase = "apple_vendor_top_case_key_code"
    case consumer = "consumer_key_code"
    case keyCode = "key_code"
    case layer = "set_variable"
    case mouse = "mouse_key"
    case pointing = "pointing_button"
}

// ANSI, JIS, ISOを含む列挙型KeyCodeType
enum KeyCodeRegion: Codable {
    case ansi
    case jis
    case iso
}

struct KeyCodeInfo {
    let functionType: KeyCodeFunctionType
    let keyCodeString: String
    
    let includeShift: Bool
    let includeCommand: Bool
    let includeOption: Bool
    let includeControl: Bool
    let includeFn: Bool
    
    init(functionType: KeyCodeFunctionType, keyCodeString: String, includeShift: Bool = false, includeCommand: Bool = false, includeOption: Bool = false, includeControl: Bool = false, includeFn: Bool = false) {
        self.functionType = functionType
        self.keyCodeString = keyCodeString
        self.includeShift = includeShift
        self.includeCommand = includeCommand
        self.includeOption = includeOption
        self.includeControl = includeControl
        self.includeFn = includeFn
    }
}

// ANSI, JIS, ISOの辞書をそれぞれ定義
struct KeyMappings {
    static let ansi: [String: KeyCodeInfo] = [
        //keyOutput: (functionType,KeyCodeString)
        "vk_none": KeyCodeInfo(functionType: .keyCode, keyCodeString: "vk_none"),
        //BasicKeys
            //Alphabet
        "a": KeyCodeInfo(functionType: .keyCode, keyCodeString: "a"),
        "b": KeyCodeInfo(functionType: .keyCode, keyCodeString: "b"),
        "c": KeyCodeInfo(functionType: .keyCode, keyCodeString: "c"),
        "d": KeyCodeInfo(functionType: .keyCode, keyCodeString: "d"),
        "e": KeyCodeInfo(functionType: .keyCode, keyCodeString: "e"),
        "f": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f"),
        "g": KeyCodeInfo(functionType: .keyCode, keyCodeString: "g"),
        "h": KeyCodeInfo(functionType: .keyCode, keyCodeString: "h"),
        "i": KeyCodeInfo(functionType: .keyCode, keyCodeString: "i"),
        "j": KeyCodeInfo(functionType: .keyCode, keyCodeString: "j"),
        "k": KeyCodeInfo(functionType: .keyCode, keyCodeString: "k"),
        "l": KeyCodeInfo(functionType: .keyCode, keyCodeString: "l"),
        "m": KeyCodeInfo(functionType: .keyCode, keyCodeString: "m"),
        "n": KeyCodeInfo(functionType: .keyCode, keyCodeString: "n"),
        "o": KeyCodeInfo(functionType: .keyCode, keyCodeString: "o"),
        "p": KeyCodeInfo(functionType: .keyCode, keyCodeString: "p"),
        "q": KeyCodeInfo(functionType: .keyCode, keyCodeString: "q"),
        "r": KeyCodeInfo(functionType: .keyCode, keyCodeString: "r"),
        "s": KeyCodeInfo(functionType: .keyCode, keyCodeString: "s"),
        "t": KeyCodeInfo(functionType: .keyCode, keyCodeString: "t"),
        "u": KeyCodeInfo(functionType: .keyCode, keyCodeString: "u"),
        "v": KeyCodeInfo(functionType: .keyCode, keyCodeString: "v"),
        "w": KeyCodeInfo(functionType: .keyCode, keyCodeString: "w"),
        "x": KeyCodeInfo(functionType: .keyCode, keyCodeString: "x"),
        "y": KeyCodeInfo(functionType: .keyCode, keyCodeString: "y"),
        "z": KeyCodeInfo(functionType: .keyCode, keyCodeString: "z"),
            //Number
        "1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1"),
        "2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2"),
        "3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3"),
        "4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4"),
        "5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5"),
        "6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6"),
        "7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7"),
        "8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8"),
        "9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9"),
        "0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "0"),

        //SymbolKeys
            //単打系
        "`": KeyCodeInfo(functionType: .keyCode, keyCodeString: "grave_accent_and_tilde"),
        "-": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen"),
        "=": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "[": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "]": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "\\": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        ";": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon"),
        "'": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),
        ",": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma"),
        ".": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period"),
        "/": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash"),
            //Shift + Number
        "!": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1", includeShift: true),
        "@": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2", includeShift: true),
        "#": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3", includeShift: true),
        "$": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4", includeShift: true),
        "%": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5", includeShift: true),
        "^": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6", includeShift: true),
        "&": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7", includeShift: true),
        "*": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8", includeShift: true),
        "(": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9", includeShift: true),
        ")": KeyCodeInfo(functionType: .keyCode, keyCodeString: "0", includeShift: true),

            //Shift + Symbol
        "~": KeyCodeInfo(functionType: .keyCode, keyCodeString: "grave_accent_and_tilde", includeShift: true),
        "_": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen", includeShift: true),
        "+": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign", includeShift: true),
        "{": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket", includeShift: true),
        "}": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket", includeShift: true),
        "|": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash", includeShift: true),
        ":": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon", includeShift: true),
        "\"": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote", includeShift: true),
        "<": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma", includeShift: true),
        ">": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period", includeShift: true),
        "?": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash", includeShift: true),
        //KeypadKeys
        "keypad_0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_0"),
        "keypad_1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_1"),
        "keypad_2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_2"),
        "keypad_3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_3"),
        "keypad_4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_4"),
        "keypad_5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_5"),
        "keypad_6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_6"),
        "keypad_7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_7"),
        "keypad_8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_8"),
        "keypad_9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_9"),
        "keypad_num_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_num_lock"),
        "keypad_slash": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_slash"),
        "keypad_asterisk": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_asterisk"),
        "keypad_hyphen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_hyphen"),
        "keypad_plus": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_plus"),
        "keypad_equal_sign": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_equal_sign"),
        "keypad_enter": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_enter"),
        "keypad_comma": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_comma"),
        "keypad_period": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_period"),
        
        //ControlKeys
        "return": KeyCodeInfo(functionType: .keyCode, keyCodeString: "return_or_enter"),
        "␣": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "spacebar": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "tab": KeyCodeInfo(functionType: .keyCode, keyCodeString: "tab"),
        "esc": KeyCodeInfo(functionType: .keyCode, keyCodeString: "escape"),
        "BS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_or_backspace"),
        "Del": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_forward"),
        "caps": KeyCodeInfo(functionType: .keyCode, keyCodeString: "caps_lock"),

        "↑": KeyCodeInfo(functionType: .keyCode, keyCodeString: "up_arrow"),
        "↓": KeyCodeInfo(functionType: .keyCode, keyCodeString: "down_arrow"),
        "←": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_arrow"),
        "→": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_arrow"),
        "かな": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_kana"),
        "英数": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_eisuu"),
        "変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
        "無変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
            //FullSizeKeyboard
        "print_screen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "print_screen"),
        "scroll_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "scroll_lock"),
        "pause": KeyCodeInfo(functionType: .keyCode, keyCodeString: "pause"),
        "insert": KeyCodeInfo(functionType: .keyCode, keyCodeString: "insert"),
        "application": KeyCodeInfo(functionType: .keyCode, keyCodeString: "application"),
        "help": KeyCodeInfo(functionType: .keyCode, keyCodeString: "help"),
        "power": KeyCodeInfo(functionType: .keyCode, keyCodeString: "power"),
        "page_up": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_ap"),
        "page_down": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_down"),
        "home": KeyCodeInfo(functionType: .keyCode, keyCodeString: "home"),
        "end": KeyCodeInfo(functionType: .keyCode, keyCodeString: "end"),
        
            //MacOS
        "mission_control": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "mission_control"),
        "spotlight": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "spotlight"),
        "dictation": KeyCodeInfo(functionType: .consumer, keyCodeString: "dictation"),
        "launchpad": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "launchpad"),
            //Sound
        "rewind": KeyCodeInfo(functionType: .consumer, keyCodeString: "rewind"),
        "play_or_pause": KeyCodeInfo(functionType: .consumer, keyCodeString: "play_or_pause"),
        "fast_forward": KeyCodeInfo(functionType: .consumer, keyCodeString: "fast_forward"),
        "mute": KeyCodeInfo(functionType: .consumer, keyCodeString: "mute"),
        "volume_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_decrement"),
        "volume_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_increment"),
        "eject": KeyCodeInfo(functionType: .consumer, keyCodeString: "eject"),
            //Light
        "display_brightness_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_increment"),
        "display_brightness_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_decrement"),
        "brightness_up": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "brightness_down": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "illumination_up": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_up"),
        "illumination_down": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_down"),
        
        //international
        "international1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international1"),
        "international2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international2"),
        "international3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international3"),
        "international4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international4"),
        "international5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international5"),
        "international6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international6"),
        "international7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international7"),
        "international8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international8"),
        "international9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international9"),
        "lang1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang1"),
        "lang2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang2"),
        "lang3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang3"),
        "lang4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang4"),
        "lang5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang5"),
        "lang6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang6"),
        "lang7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang7"),
        "lang8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang8"),
        "lang9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang9"),
        
        //SpecialKeys
        "layer1": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer1\",\"value\": 1}"),
        "layer2": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer2\",\"value\": 1}"),
        "layer3": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer3\",\"value\": 1}"),
        "layer4": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer4\",\"value\": 1}"),
        "layer5": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer5\",\"value\": 1}"),
        "layer6": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer6\",\"value\": 1}"),
        "layer7": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer7\",\"value\": 1}"),
        "layer8": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer8\",\"value\": 1}"),

        "left_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_shift"),
        "right_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_shift"),
        "left_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_command"),
        "right_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_command"),
        "left_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_control"),
        "right_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_control"),
        "left_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_option"),
        "right_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_option"),
        "fn": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "keyboard_fn"),
        
        //fucntionKeys
        "F1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f1"),
        "F2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f2"),
        "F3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f3"),
        "F4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f4"),
        "F5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f5"),
        "F6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f6"),
        "F7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f7"),
        "F8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f8"),
        "F9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f9"),
        "F10": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f10"),
        "F11": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f11"),
        "F12": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f12"),
        "F13": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f13"),
        "F14": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f14"),
        "F15": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f15"),
        "F16": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f16"),
        "F17": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f17"),
        "F18": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f18"),
        "F19": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f19"),
        "F20": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f20"),
        "F21": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f21"),
        "F22": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f22"),
        "F23": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f23"),
        "F24": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f24"),
        //MouseKey
        "mouse_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -1536 }"),
        "mouse_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -3072 }"),
        "mouse_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -768 }"),
        "mouse_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 1536 }"),
        "mouse_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 3072 }"),
        "mouse_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 768 }"),
        "mouse_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -1536 }"),
        "mouse_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -3072 }"),
        "mouse_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -768 }"),
        "mouse_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 1536 }"),
        "mouse_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 3072 }"),
        "mouse_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 768 }"),
            "scroll_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -32 }"),
        "scroll_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -64 }"),
        "scroll_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -16 }"),
        "scroll_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 32 }"),
        "scroll_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 64 }"),
        "scroll_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 16 }"),
        "scroll_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 32 }"),
        "scroll_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 64 }"),
        "scroll_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 16 }"),
        "scroll_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -32 }"),
        "scroll_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -64 }"),
        "scroll_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -16 }"),
        "speed_multi_plier(2.0)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 2 }"),
        "speed_multi_plier(0.5)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.5 }"),
        "speed_multi_plier(0.25)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.25 }"),
        "speed_multi_plier(0.125)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.125 }"),
        "button1": KeyCodeInfo(functionType: .pointing, keyCodeString: "button1"),
        "button2": KeyCodeInfo(functionType: .pointing, keyCodeString: "button2"),
        "button3": KeyCodeInfo(functionType: .pointing, keyCodeString: "button3"),
        "button4": KeyCodeInfo(functionType: .pointing, keyCodeString: "button4"),
        "button5": KeyCodeInfo(functionType: .pointing, keyCodeString: "button5"),
        "button6": KeyCodeInfo(functionType: .pointing, keyCodeString: "button6"),
        "button7": KeyCodeInfo(functionType: .pointing, keyCodeString: "button7"),
        "button8": KeyCodeInfo(functionType: .pointing, keyCodeString: "button8"),
        "button9": KeyCodeInfo(functionType: .pointing, keyCodeString: "button9"),
        "button10": KeyCodeInfo(functionType: .pointing, keyCodeString: "button10"),
        "button11": KeyCodeInfo(functionType: .pointing, keyCodeString: "button11"),
        "button12": KeyCodeInfo(functionType: .pointing, keyCodeString: "button12"),
        "button13": KeyCodeInfo(functionType: .pointing, keyCodeString: "button13"),
        "button14": KeyCodeInfo(functionType: .pointing, keyCodeString: "button14"),
        "button15": KeyCodeInfo(functionType: .pointing, keyCodeString: "button15"),
        "button16": KeyCodeInfo(functionType: .pointing, keyCodeString: "button16"),
        "button17": KeyCodeInfo(functionType: .pointing, keyCodeString: "button17"),
        "button18": KeyCodeInfo(functionType: .pointing, keyCodeString: "button18"),
        "button19": KeyCodeInfo(functionType: .pointing, keyCodeString: "button19"),
        "button20": KeyCodeInfo(functionType: .pointing, keyCodeString: "button20"),
        "button21": KeyCodeInfo(functionType: .pointing, keyCodeString: "button21"),
        "button22": KeyCodeInfo(functionType: .pointing, keyCodeString: "button22"),
        "button23": KeyCodeInfo(functionType: .pointing, keyCodeString: "button23"),
        "button24": KeyCodeInfo(functionType: .pointing, keyCodeString: "button24"),
        "button25": KeyCodeInfo(functionType: .pointing, keyCodeString: "button25"),
        "button26": KeyCodeInfo(functionType: .pointing, keyCodeString: "button26"),
        "button27": KeyCodeInfo(functionType: .pointing, keyCodeString: "button27"),
        "button28": KeyCodeInfo(functionType: .pointing, keyCodeString: "button28"),
        "button29": KeyCodeInfo(functionType: .pointing, keyCodeString: "button29"),
        "button30": KeyCodeInfo(functionType: .pointing, keyCodeString: "button30"),
        "button31": KeyCodeInfo(functionType: .pointing, keyCodeString: "button31"),
        "button32": KeyCodeInfo(functionType: .pointing, keyCodeString: "button32"),
        
        //Rigion UK
        "§_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "grave_accent_and_tilde"),
        "`_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "non_us_backslash"),
        //Rigion JIS
        "^_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "@_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "[_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "]_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        ":_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),
        

    ]
    
    static let jis: [String: KeyCodeInfo] = [
        //出力されて打たれるキー：それに対するキーコードfunctionType,KeyCodeString
        "vk_none": KeyCodeInfo(functionType: .keyCode, keyCodeString: "vk_none"),
        //BasicKeys
            //Alphabet
        "a": KeyCodeInfo(functionType: .keyCode, keyCodeString: "a"),
        "b": KeyCodeInfo(functionType: .keyCode, keyCodeString: "b"),
        "c": KeyCodeInfo(functionType: .keyCode, keyCodeString: "c"),
        "d": KeyCodeInfo(functionType: .keyCode, keyCodeString: "d"),
        "e": KeyCodeInfo(functionType: .keyCode, keyCodeString: "e"),
        "f": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f"),
        "g": KeyCodeInfo(functionType: .keyCode, keyCodeString: "g"),
        "h": KeyCodeInfo(functionType: .keyCode, keyCodeString: "h"),
        "i": KeyCodeInfo(functionType: .keyCode, keyCodeString: "i"),
        "j": KeyCodeInfo(functionType: .keyCode, keyCodeString: "j"),
        "k": KeyCodeInfo(functionType: .keyCode, keyCodeString: "k"),
        "l": KeyCodeInfo(functionType: .keyCode, keyCodeString: "l"),
        "m": KeyCodeInfo(functionType: .keyCode, keyCodeString: "m"),
        "n": KeyCodeInfo(functionType: .keyCode, keyCodeString: "n"),
        "o": KeyCodeInfo(functionType: .keyCode, keyCodeString: "o"),
        "p": KeyCodeInfo(functionType: .keyCode, keyCodeString: "p"),
        "q": KeyCodeInfo(functionType: .keyCode, keyCodeString: "q"),
        "r": KeyCodeInfo(functionType: .keyCode, keyCodeString: "r"),
        "s": KeyCodeInfo(functionType: .keyCode, keyCodeString: "s"),
        "t": KeyCodeInfo(functionType: .keyCode, keyCodeString: "t"),
        "u": KeyCodeInfo(functionType: .keyCode, keyCodeString: "u"),
        "v": KeyCodeInfo(functionType: .keyCode, keyCodeString: "v"),
        "w": KeyCodeInfo(functionType: .keyCode, keyCodeString: "w"),
        "x": KeyCodeInfo(functionType: .keyCode, keyCodeString: "x"),
        "y": KeyCodeInfo(functionType: .keyCode, keyCodeString: "y"),
        "z": KeyCodeInfo(functionType: .keyCode, keyCodeString: "z"),
            //Number
        "0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "0"),
        "1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1"),
        "2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2"),
        "3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3"),
        "4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4"),
        "5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5"),
        "6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6"),
        "7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7"),
        "8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8"),
        "9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9"),
        //SymbolKeys
            //単打系
        "`": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket", includeShift: true),
        "-": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen"),
        "=": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen", includeShift: true),
        "[": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "]": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        "\\": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international3"),
        ";": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon"),
        "'": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7", includeShift: true),
        ",": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma"),
        ".": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period"),
        "/": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash"),
            //Shift + Number
        "!": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1", includeShift: true),
        "@": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "#": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3", includeShift: true),
        "$": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4", includeShift: true),
        "%": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5", includeShift: true),
        "^": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "&": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6", includeShift: true),
        "*": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote", includeShift: true),
        "(": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8", includeShift: true),
        ")": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9", includeShift: true),

            //Shift + Symbol
        "~": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign", includeShift: true),
        "_": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international1"),
        "+": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon", includeShift: true),
        "{": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket", includeShift: true),
        "}": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash", includeShift: true),
        "|": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international3", includeShift: true),
        ":": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),
        "\"": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2", includeShift: true),
        "<": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma", includeShift: true),
        ">": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period", includeShift: true),
        "?": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash", includeShift: true),
        
        //KeypadKeys
        "keypad_0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_0"),
        "keypad_1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_1"),
        "keypad_2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_2"),
        "keypad_3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_3"),
        "keypad_4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_4"),
        "keypad_5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_5"),
        "keypad_6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_6"),
        "keypad_7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_7"),
        "keypad_8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_8"),
        "keypad_9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_9"),
        "keypad_num_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_num_lock"),
        "keypad_slash": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_slash"),
        "keypad_asterisk": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_asterisk"),
        "keypad_hyphen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_hyphen"),
        "keypad_plus": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_plus"),
        "keypad_equal_sign": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_equal_sign"),
        "keypad_enter": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_enter"),
        "keypad_comma": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_comma"),
        "keypad_period": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_period"),
        
        //ControlKeys
            //Basic
        "return": KeyCodeInfo(functionType: .keyCode, keyCodeString: "return_or_enter"),
        "␣": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "spacebar": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "tab": KeyCodeInfo(functionType: .keyCode, keyCodeString: "tab"),
        "esc": KeyCodeInfo(functionType: .keyCode, keyCodeString: "escape"),
        "BS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_or_backspace"),
        "Del": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_forward"),
        "caps": KeyCodeInfo(functionType: .keyCode, keyCodeString: "caps_lock"),
        
        "↑": KeyCodeInfo(functionType: .keyCode, keyCodeString: "up_arrow"),
        "↓": KeyCodeInfo(functionType: .keyCode, keyCodeString: "down_arrow"),
        "←": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_arrow"),
        "→": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_arrow"),
        "かな": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_kana"),
        "英数": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_eisuu"),
        "変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
        "無変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
            //FullSizeKeyboard
        "print_screen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "print_screen"),
        "scroll_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "scroll_lock"),
        "pause": KeyCodeInfo(functionType: .keyCode, keyCodeString: "pause"),
        "insert": KeyCodeInfo(functionType: .keyCode, keyCodeString: "insert"),
        "application": KeyCodeInfo(functionType: .keyCode, keyCodeString: "application"),
        "help": KeyCodeInfo(functionType: .keyCode, keyCodeString: "help"),
        "power": KeyCodeInfo(functionType: .keyCode, keyCodeString: "power"),
        
        "page_up": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_ap"),
        "page_down": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_down"),
        "home": KeyCodeInfo(functionType: .keyCode, keyCodeString: "home"),
        "end": KeyCodeInfo(functionType: .keyCode, keyCodeString: "end"),
        
            //MacOS
        "mission_control": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "mission_control"),
        "spotlight": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "spotlight"),
        "dictation": KeyCodeInfo(functionType: .consumer, keyCodeString: "dictation"),
        "launchpad": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "launchpad"),
            //Sound
        "rewind": KeyCodeInfo(functionType: .consumer, keyCodeString: "rewind"),
        "play_or_pause": KeyCodeInfo(functionType: .consumer, keyCodeString: "play_or_pause"),
        "fast_forward": KeyCodeInfo(functionType: .consumer, keyCodeString: "fast_forward"),
        "mute": KeyCodeInfo(functionType: .consumer, keyCodeString: "mute"),
        "volume_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_decrement"),
        "volume_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_increment"),
        "eject": KeyCodeInfo(functionType: .consumer, keyCodeString: "eject"),
            //Light
        "display_brightness_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_increment"),
        "display_brightness_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_decrement"),
        "brightness_up": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "brightness_down": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "illumination_up": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_up"),
        "illumination_down": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_down"),
        
        //international
        "international1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international1"),
        "international2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international2"),
        "international3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international3"),
        "international4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international4"),
        "international5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international5"),
        "international6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international6"),
        "international7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international7"),
        "international8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international8"),
        "international9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international9"),
        "lang1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang1"),
        "lang2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang2"),
        "lang3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang3"),
        "lang4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang4"),
        "lang5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang5"),
        "lang6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang6"),
        "lang7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang7"),
        "lang8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang8"),
        "lang9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang9"),
        
        //SpecialKeys
        "layer1": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer1\",\"value\": 1}"),
        "layer2": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer2\",\"value\": 1}"),
        "layer3": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer3\",\"value\": 1}"),
        "layer4": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer4\",\"value\": 1}"),
        "layer5": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer5\",\"value\": 1}"),
        "layer6": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer6\",\"value\": 1}"),
        "layer7": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer7\",\"value\": 1}"),
        "layer8": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer8\",\"value\": 1}"),

        "left_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_shift"),
        "right_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_shift"),
        "left_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_command"),
        "right_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_command"),
        "left_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_control"),
        "right_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_control"),
        "left_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_option"),
        "right_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_option"),
        "fn": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "keyboard_fn"),
        
        //fucntionKeys
        "F1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f1"),
        "F2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f2"),
        "F3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f3"),
        "F4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f4"),
        "F5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f5"),
        "F6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f6"),
        "F7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f7"),
        "F8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f8"),
        "F9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f9"),
        "F10": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f10"),
        "F11": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f11"),
        "F12": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f12"),
        "F13": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f13"),
        "F14": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f14"),
        "F15": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f15"),
        "F16": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f16"),
        "F17": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f17"),
        "F18": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f18"),
        "F19": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f19"),
        "F20": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f20"),
        "F21": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f21"),
        "F22": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f22"),
        "F23": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f23"),
        "F24": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f24"),
        //MouseKey
        "mouse_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -1536 }"),
        "mouse_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -3072 }"),
        "mouse_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -768 }"),
        "mouse_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 1536 }"),
        "mouse_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 3072 }"),
        "mouse_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 768 }"),
        "mouse_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -1536 }"),
        "mouse_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -3072 }"),
        "mouse_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -768 }"),
        "mouse_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 1536 }"),
        "mouse_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 3072 }"),
        "mouse_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 768 }"),
        "scroll_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -32 }"),
        "scroll_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -64 }"),
        "scroll_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -16 }"),
        "scroll_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 32 }"),
        "scroll_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 64 }"),
        "scroll_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 16 }"),
        "scroll_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 32 }"),
        "scroll_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 64 }"),
        "scroll_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 16 }"),
        "scroll_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -32 }"),
        "scroll_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -64 }"),
        "scroll_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -16 }"),
        "speed_multi_plier(2.0)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 2 }"),
        "speed_multi_plier(0.5)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.5 }"),
        "speed_multi_plier(0.25)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.25 }"),
        "speed_multi_plier(0.125)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.125 }"),
        "button1": KeyCodeInfo(functionType: .pointing, keyCodeString: "button1"),
        "button2": KeyCodeInfo(functionType: .pointing, keyCodeString: "button2"),
        "button3": KeyCodeInfo(functionType: .pointing, keyCodeString: "button3"),
        "button4": KeyCodeInfo(functionType: .pointing, keyCodeString: "button4"),
        "button5": KeyCodeInfo(functionType: .pointing, keyCodeString: "button5"),
        "button6": KeyCodeInfo(functionType: .pointing, keyCodeString: "button6"),
        "button7": KeyCodeInfo(functionType: .pointing, keyCodeString: "button7"),
        "button8": KeyCodeInfo(functionType: .pointing, keyCodeString: "button8"),
        "button9": KeyCodeInfo(functionType: .pointing, keyCodeString: "button9"),
        "button10": KeyCodeInfo(functionType: .pointing, keyCodeString: "button10"),
        "button11": KeyCodeInfo(functionType: .pointing, keyCodeString: "button11"),
        "button12": KeyCodeInfo(functionType: .pointing, keyCodeString: "button12"),
        "button13": KeyCodeInfo(functionType: .pointing, keyCodeString: "button13"),
        "button14": KeyCodeInfo(functionType: .pointing, keyCodeString: "button14"),
        "button15": KeyCodeInfo(functionType: .pointing, keyCodeString: "button15"),
        "button16": KeyCodeInfo(functionType: .pointing, keyCodeString: "button16"),
        "button17": KeyCodeInfo(functionType: .pointing, keyCodeString: "button17"),
        "button18": KeyCodeInfo(functionType: .pointing, keyCodeString: "button18"),
        "button19": KeyCodeInfo(functionType: .pointing, keyCodeString: "button19"),
        "button20": KeyCodeInfo(functionType: .pointing, keyCodeString: "button20"),
        "button21": KeyCodeInfo(functionType: .pointing, keyCodeString: "button21"),
        "button22": KeyCodeInfo(functionType: .pointing, keyCodeString: "button22"),
        "button23": KeyCodeInfo(functionType: .pointing, keyCodeString: "button23"),
        "button24": KeyCodeInfo(functionType: .pointing, keyCodeString: "button24"),
        "button25": KeyCodeInfo(functionType: .pointing, keyCodeString: "button25"),
        "button26": KeyCodeInfo(functionType: .pointing, keyCodeString: "button26"),
        "button27": KeyCodeInfo(functionType: .pointing, keyCodeString: "button27"),
        "button28": KeyCodeInfo(functionType: .pointing, keyCodeString: "button28"),
        "button29": KeyCodeInfo(functionType: .pointing, keyCodeString: "button29"),
        "button30": KeyCodeInfo(functionType: .pointing, keyCodeString: "button30"),
        "button31": KeyCodeInfo(functionType: .pointing, keyCodeString: "button31"),
        "button32": KeyCodeInfo(functionType: .pointing, keyCodeString: "button32"),
        
        //Rigion UK
        "§_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "grave_accent_and_tilde"),
        "`_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "non_us_backslash"),
        //Rigion JIS
        "^_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "@_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "[_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "]_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        ":_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),

    ]
    
    static let iso: [String: KeyCodeInfo] = [
        //出力されて打たれるキー：それに対するキーコードfunctionType,KeyCodeString
        "vk_none": KeyCodeInfo(functionType: .keyCode, keyCodeString: "vk_none"),
        //BasicKeys
            //Alphabet
        "a": KeyCodeInfo(functionType: .keyCode, keyCodeString: "a"),
        "b": KeyCodeInfo(functionType: .keyCode, keyCodeString: "b"),
        "c": KeyCodeInfo(functionType: .keyCode, keyCodeString: "c"),
        "d": KeyCodeInfo(functionType: .keyCode, keyCodeString: "d"),
        "e": KeyCodeInfo(functionType: .keyCode, keyCodeString: "e"),
        "f": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f"),
        "g": KeyCodeInfo(functionType: .keyCode, keyCodeString: "g"),
        "h": KeyCodeInfo(functionType: .keyCode, keyCodeString: "h"),
        "i": KeyCodeInfo(functionType: .keyCode, keyCodeString: "i"),
        "j": KeyCodeInfo(functionType: .keyCode, keyCodeString: "j"),
        "k": KeyCodeInfo(functionType: .keyCode, keyCodeString: "k"),
        "l": KeyCodeInfo(functionType: .keyCode, keyCodeString: "l"),
        "m": KeyCodeInfo(functionType: .keyCode, keyCodeString: "m"),
        "n": KeyCodeInfo(functionType: .keyCode, keyCodeString: "n"),
        "o": KeyCodeInfo(functionType: .keyCode, keyCodeString: "o"),
        "p": KeyCodeInfo(functionType: .keyCode, keyCodeString: "p"),
        "q": KeyCodeInfo(functionType: .keyCode, keyCodeString: "q"),
        "r": KeyCodeInfo(functionType: .keyCode, keyCodeString: "r"),
        "s": KeyCodeInfo(functionType: .keyCode, keyCodeString: "s"),
        "t": KeyCodeInfo(functionType: .keyCode, keyCodeString: "t"),
        "u": KeyCodeInfo(functionType: .keyCode, keyCodeString: "u"),
        "v": KeyCodeInfo(functionType: .keyCode, keyCodeString: "v"),
        "w": KeyCodeInfo(functionType: .keyCode, keyCodeString: "w"),
        "x": KeyCodeInfo(functionType: .keyCode, keyCodeString: "x"),
        "y": KeyCodeInfo(functionType: .keyCode, keyCodeString: "y"),
        "z": KeyCodeInfo(functionType: .keyCode, keyCodeString: "z"),
            //Number
        "1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1"),
        "2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2"),
        "3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3"),
        "4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4"),
        "5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5"),
        "6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6"),
        "7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7"),
        "8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8"),
        "9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9"),
        "0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "0"),
        //SymbolKeys
            //単打系
        "`": KeyCodeInfo(functionType: .keyCode, keyCodeString: "non_us_backslash"),
        "-": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen"),
        "=": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "[": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "]": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "\\": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        ";": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon"),
        "'": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),
        ",": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma"),
        ".": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period"),
        "/": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash"),
            //Shift + Number
        "!": KeyCodeInfo(functionType: .keyCode, keyCodeString: "1", includeShift: true),
        "@": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2", includeShift: true),
        "€": KeyCodeInfo(functionType: .keyCode, keyCodeString: "2", includeShift: true, includeOption: true),
        "#": KeyCodeInfo(functionType: .keyCode, keyCodeString: "3", includeShift: true),
        "$": KeyCodeInfo(functionType: .keyCode, keyCodeString: "4", includeShift: true),
        "%": KeyCodeInfo(functionType: .keyCode, keyCodeString: "5", includeShift: true),
        "^": KeyCodeInfo(functionType: .keyCode, keyCodeString: "6", includeShift: true),
        "&": KeyCodeInfo(functionType: .keyCode, keyCodeString: "7", includeShift: true),
        "*": KeyCodeInfo(functionType: .keyCode, keyCodeString: "8", includeShift: true),
        "(": KeyCodeInfo(functionType: .keyCode, keyCodeString: "9", includeShift: true),
        ")": KeyCodeInfo(functionType: .keyCode, keyCodeString: "0", includeShift: true),
            //Shift + Symbol
        "~": KeyCodeInfo(functionType: .keyCode, keyCodeString: "non_us_backslash", includeShift: true),
        "_": KeyCodeInfo(functionType: .keyCode, keyCodeString: "hyphen", includeShift: true),
        "+": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign", includeShift: true),
        "{": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket", includeShift: true),
        "}": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket", includeShift: true),
        "|": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash", includeShift: true),
        ":": KeyCodeInfo(functionType: .keyCode, keyCodeString: "semicolon", includeShift: true),
        "\"": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote", includeShift: true),
        "<": KeyCodeInfo(functionType: .keyCode, keyCodeString: "comma", includeShift: true),
        ">": KeyCodeInfo(functionType: .keyCode, keyCodeString: "period", includeShift: true),
        "?": KeyCodeInfo(functionType: .keyCode, keyCodeString: "slash", includeShift: true),
        //KeypadKeys
        "keypad_0": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_0"),
        "keypad_1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_1"),
        "keypad_2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_2"),
        "keypad_3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_3"),
        "keypad_4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_4"),
        "keypad_5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_5"),
        "keypad_6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_6"),
        "keypad_7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_7"),
        "keypad_8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_8"),
        "keypad_9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_9"),
        "keypad_num_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_num_lock"),
        "keypad_slash": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_slash"),
        "keypad_asterisk": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_asterisk"),
        "keypad_hyphen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_hyphen"),
        "keypad_plus": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_plus"),
        "keypad_equal_sign": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_equal_sign"),
        "keypad_enter": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_enter"),
        "keypad_comma": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_comma"),
        "keypad_period": KeyCodeInfo(functionType: .keyCode, keyCodeString: "keypad_period"),
        
        //ControlKeys
            //Basic
        "return": KeyCodeInfo(functionType: .keyCode, keyCodeString: "return_or_enter"),
        "␣": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "spacebar": KeyCodeInfo(functionType: .keyCode, keyCodeString: "spacebar"),
        "tab": KeyCodeInfo(functionType: .keyCode, keyCodeString: "tab"),
        "esc": KeyCodeInfo(functionType: .keyCode, keyCodeString: "escape"),
        "BS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_or_backspace"),
        "Del": KeyCodeInfo(functionType: .keyCode, keyCodeString: "delete_forward"),
        "caps": KeyCodeInfo(functionType: .keyCode, keyCodeString: "caps_lock"),

        "↑": KeyCodeInfo(functionType: .keyCode, keyCodeString: "up_arrow"),
        "↓": KeyCodeInfo(functionType: .keyCode, keyCodeString: "down_arrow"),
        "←": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_arrow"),
        "→": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_arrow"),
        "かな": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_kana"),
        "英数": KeyCodeInfo(functionType: .keyCode, keyCodeString: "japanese_eisuu"),
        "変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
        "無変換": KeyCodeInfo(functionType: .keyCode, keyCodeString: "要調査"),
            //FullSizeKeyboard
        "print_screen": KeyCodeInfo(functionType: .keyCode, keyCodeString: "print_screen"),
        "scroll_lock": KeyCodeInfo(functionType: .keyCode, keyCodeString: "scroll_lock"),
        "pause": KeyCodeInfo(functionType: .keyCode, keyCodeString: "pause"),
        "insert": KeyCodeInfo(functionType: .keyCode, keyCodeString: "insert"),
        "application": KeyCodeInfo(functionType: .keyCode, keyCodeString: "application"),
        "help": KeyCodeInfo(functionType: .keyCode, keyCodeString: "help"),
        "power": KeyCodeInfo(functionType: .keyCode, keyCodeString: "power"),
        
        "page_up": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_ap"),
        "page_down": KeyCodeInfo(functionType: .keyCode, keyCodeString: "page_down"),
        "home": KeyCodeInfo(functionType: .keyCode, keyCodeString: "home"),
        "end": KeyCodeInfo(functionType: .keyCode, keyCodeString: "end"),
        
            //MacOS
        "mission_control": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "mission_control"),
        "spotlight": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "spotlight"),
        "dictation": KeyCodeInfo(functionType: .consumer, keyCodeString: "dictation"),
        "launchpad": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "launchpad"),
            //Sound
        "rewind": KeyCodeInfo(functionType: .consumer, keyCodeString: "rewind"),
        "play_or_pause": KeyCodeInfo(functionType: .consumer, keyCodeString: "play_or_pause"),
        "fast_forward": KeyCodeInfo(functionType: .consumer, keyCodeString: "fast_forward"),
        "mute": KeyCodeInfo(functionType: .consumer, keyCodeString: "mute"),
        "volume_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_decrement"),
        "volume_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "volume_increment"),
        "eject": KeyCodeInfo(functionType: .consumer, keyCodeString: "eject"),
            //Light
        "display_brightness_increment": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_increment"),
        "display_brightness_decrement": KeyCodeInfo(functionType: .consumer, keyCodeString: "display_brightness_decrement"),
        "brightness_up": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "brightness_down": KeyCodeInfo(functionType: .appleVendorKeyboard, keyCodeString: "brightness_up"),
        "illumination_up": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_up"),
        "illumination_down": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "illumination_down"),
        
        //international
        "international1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international1"),
        "international2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international2"),
        "international3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international3"),
        "international4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international4"),
        "international5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international5"),
        "international6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international6"),
        "international7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international7"),
        "international8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international8"),
        "international9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "international9"),
        "lang1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang1"),
        "lang2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang2"),
        "lang3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang3"),
        "lang4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang4"),
        "lang5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang5"),
        "lang6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang6"),
        "lang7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang7"),
        "lang8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang8"),
        "lang9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "lang9"),
        
        //SpecialKeys
        "layer1": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer1\",\"value\": 1}"),
        "layer2": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer2\",\"value\": 1}"),
        "layer3": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer3\",\"value\": 1}"),
        "layer4": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer4\",\"value\": 1}"),
        "layer5": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer5\",\"value\": 1}"),
        "layer6": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer6\",\"value\": 1}"),
        "layer7": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer7\",\"value\": 1}"),
        "layer8": KeyCodeInfo(functionType: .layer, keyCodeString: "{\"name\": \"layer8\",\"value\": 1}"),


        "left_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_shift"),
        "right_shift": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_shift"),
        "left_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_command"),
        "right_command": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_command"),
        "left_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_control"),
        "right_control": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_control"),
        "left_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "left_option"),
        "right_option": KeyCodeInfo(functionType: .keyCode, keyCodeString: "right_option"),
        "fn": KeyCodeInfo(functionType: .appleVendorTopCase, keyCodeString: "keyboard_fn"),
        
        //fucntionKeys
        "F1": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f1"),
        "F2": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f2"),
        "F3": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f3"),
        "F4": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f4"),
        "F5": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f5"),
        "F6": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f6"),
        "F7": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f7"),
        "F8": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f8"),
        "F9": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f9"),
        "F10": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f10"),
        "F11": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f11"),
        "F12": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f12"),
        "F13": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f13"),
        "F14": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f14"),
        "F15": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f15"),
        "F16": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f16"),
        "F17": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f17"),
        "F18": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f18"),
        "F19": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f19"),
        "F20": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f20"),
        "F21": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f21"),
        "F22": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f22"),
        "F23": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f23"),
        "F24": KeyCodeInfo(functionType: .keyCode, keyCodeString: "f24"),
        //MouseKey
        "mouse_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -1536 }"),
        "mouse_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -3072 }"),
        "mouse_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": -768 }"),
        "mouse_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 1536 }"),
        "mouse_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 3072 }"),
        "mouse_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"y\": 768 }"),
        "mouse_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -1536 }"),
        "mouse_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -3072 }"),
        "mouse_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": -768 }"),
        "mouse_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 1536 }"),
        "mouse_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 3072 }"),
        "mouse_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"x\": 768 }"),
        "scroll_up": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -32 }"),
        "scroll_up(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -64 }"),
        "scroll_up(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": -16 }"),
        "scroll_down": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 32 }"),
        "scroll_down(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 64 }"),
        "scroll_down(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"vertical_wheel\": 16 }"),
        "scroll_left": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 32 }"),
        "scroll_left(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 64 }"),
        "scroll_left(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": 16 }"),
        "scroll_right": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -32 }"),
        "scroll_right(fast)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -64 }"),
        "scroll_right(slow)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"horizontal_wheel\": -16 }"),
        "speed_multi_plier(2.0)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 2 }"),
        "speed_multi_plier(0.5)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.5 }"),
        "speed_multi_plier(0.25)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.25 }"),
        "speed_multi_plier(0.125)": KeyCodeInfo(functionType: .mouse, keyCodeString: "{ \"speed_multiplier\": 0.125 }"),
        "button1": KeyCodeInfo(functionType: .pointing, keyCodeString: "button1"),
        "button2": KeyCodeInfo(functionType: .pointing, keyCodeString: "button2"),
        "button3": KeyCodeInfo(functionType: .pointing, keyCodeString: "button3"),
        "button4": KeyCodeInfo(functionType: .pointing, keyCodeString: "button4"),
        "button5": KeyCodeInfo(functionType: .pointing, keyCodeString: "button5"),
        "button6": KeyCodeInfo(functionType: .pointing, keyCodeString: "button6"),
        "button7": KeyCodeInfo(functionType: .pointing, keyCodeString: "button7"),
        "button8": KeyCodeInfo(functionType: .pointing, keyCodeString: "button8"),
        "button9": KeyCodeInfo(functionType: .pointing, keyCodeString: "button9"),
        "button10": KeyCodeInfo(functionType: .pointing, keyCodeString: "button10"),
        "button11": KeyCodeInfo(functionType: .pointing, keyCodeString: "button11"),
        "button12": KeyCodeInfo(functionType: .pointing, keyCodeString: "button12"),
        "button13": KeyCodeInfo(functionType: .pointing, keyCodeString: "button13"),
        "button14": KeyCodeInfo(functionType: .pointing, keyCodeString: "button14"),
        "button15": KeyCodeInfo(functionType: .pointing, keyCodeString: "button15"),
        "button16": KeyCodeInfo(functionType: .pointing, keyCodeString: "button16"),
        "button17": KeyCodeInfo(functionType: .pointing, keyCodeString: "button17"),
        "button18": KeyCodeInfo(functionType: .pointing, keyCodeString: "button18"),
        "button19": KeyCodeInfo(functionType: .pointing, keyCodeString: "button19"),
        "button20": KeyCodeInfo(functionType: .pointing, keyCodeString: "button20"),
        "button21": KeyCodeInfo(functionType: .pointing, keyCodeString: "button21"),
        "button22": KeyCodeInfo(functionType: .pointing, keyCodeString: "button22"),
        "button23": KeyCodeInfo(functionType: .pointing, keyCodeString: "button23"),
        "button24": KeyCodeInfo(functionType: .pointing, keyCodeString: "button24"),
        "button25": KeyCodeInfo(functionType: .pointing, keyCodeString: "button25"),
        "button26": KeyCodeInfo(functionType: .pointing, keyCodeString: "button26"),
        "button27": KeyCodeInfo(functionType: .pointing, keyCodeString: "button27"),
        "button28": KeyCodeInfo(functionType: .pointing, keyCodeString: "button28"),
        "button29": KeyCodeInfo(functionType: .pointing, keyCodeString: "button29"),
        "button30": KeyCodeInfo(functionType: .pointing, keyCodeString: "button30"),
        "button31": KeyCodeInfo(functionType: .pointing, keyCodeString: "button31"),
        "button32": KeyCodeInfo(functionType: .pointing, keyCodeString: "button32"),
        
        //Rigion UK
        "§_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "grave_accent_and_tilde"),
        "`_UK": KeyCodeInfo(functionType: .keyCode, keyCodeString: "non_us_backslash"),

        //Rigion JIS
        "^_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "equal_sign"),
        "@_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "open_bracket"),
        "[_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "close_bracket"),
        "]_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "backslash"),
        ":_JIS": KeyCodeInfo(functionType: .keyCode, keyCodeString: "quote"),
    ]
    
    // 特定のレイアウトからキーコードを取得する関数
    static func getKeyMapping(for layout: KeyCodeRegion, key: String) -> KeyCodeInfo? {
        switch layout {
        case .ansi:
            return ansi[key]
        case .jis:
            return jis[key]
        case .iso:
            return iso[key]
        }
    }
}


